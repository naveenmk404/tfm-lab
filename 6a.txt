# 6a 

class WrongAge(Exception):
    pass

class AgeInvalid(Exception):
    pass

class Father:
    def __init__(self, age):
        if age < 0:
            raise WrongAge("Age cannot be negative")
        self.age = age

class Son(Father):
    def __init__(self, father_age, son_age):
        super().__init__(father_age)  # Call the constructor of the base class (Father)
        
        if son_age >= father_age:
            raise AgeInvalid("Son's age should be less than Father's age")
        
        self.son_age = son_age

# Example usage:
try:
    father_age = int(input("Enter father's age: "))
    son_age = int(input("Enter son's age: "))
    
    father = Father(father_age)      # creating objeccts
    son = Son(father_age, son_age)
    
    print("Father's age:", father.age)
    print("Son's age:", son.son_age)

except WrongAge as e:
    print("Error:", e)

except AgeInvalid as e:
    print("Error:", e)

except ValueError:
    print("Please enter valid age values.")
