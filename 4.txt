import numpy as np
import pandas as pd
from sklearn import svm

iris = pd.read_csv('iris.csv')

# Splitting the data into features and labels
X = iris.iloc[:, :-1]
y = iris.iloc[:, -1]

# Scaling the features
from sklearn.preprocessing import StandardScaler

scaler = StandardScaler()
X = scaler.fit_transform(X)

from sklearn.model_selection import train_test_split

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.25)

clf = svm.SVC(kernel='rbf')
clf.fit(X_train, y_train)

# Making predictions on the test set

y_pred = clf.predict(X_test)

# Evaluating the classifier accuracy
from sklearn.metrics import accuracy_score

accuracy = accuracy_score(y_test, y_pred)
print('Accuracy:', accuracy)

# Import the necessary libraries
from sklearn.svm import SVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score

# Step 1: Prepare your data
# Assuming you have your feature data in X and label data in y

# Step 2: Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Create an instance of the SVM classifier
clf = SVC(kernel='linear')

# Step 4: Train the SVM classifier
clf.fit(X_train, y_train)

# Step 5: Make predictions with the trained model
predictions = clf.predict(X_test)

# Step 6: Evaluate the performance of the model
accuracy = accuracy_score(y_test, predictions)
print("Accuracy:", accuracy)
