import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.decomposition import PCA
from sklearn.preprocessing import StandardScaler

# Load the Iris dataset
X, y = load_iris(return_X_y=True)

# Standardize features and apply PCA with 2 components
principal_components = PCA(2).fit_transform(StandardScaler().fit_transform(X))

# Create a DataFrame for visualization
pc_df = pd.DataFrame(principal_components, columns=['Principal Component 1', 'Principal Component 2'])
pc_df['Target'] = y

# Plot the 2D projection of the data
plt.figure(figsize=(8, 6))
for target, color in zip(iris.target_names, ['r', 'g', 'b']):
    plt.scatter(pc_df.loc[pc_df['Target'] == list(iris.target_names).index(target), 'Principal Component 1'],
                pc_df.loc[pc_df['Target'] == list(iris.target_names).index(target), 'Principal Component 2'],
                c=color, s=50, label=target)

plt.title('2D Projection of Iris Dataset using PCA')
plt.xlabel('Principal Component 1'), plt.ylabel('Principal Component 2')
plt.legend(), plt.grid(True), plt.show()

