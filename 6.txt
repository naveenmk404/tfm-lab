# 6
class CreditCard:
    def __init__(self, limit):
        self.__limit = limit  # Private variable

        # Balance is initialized to zero
        self.__balance = 0

    def get_balance(self):
        return self.__balance  # Public method to access balance

    def withdraw(self, amount):
        if amount <= 0:
            print("Withdraw amount must be greater than zero.")
        elif amount > self.__balance:
            print("Insufficient funds. Cannot withdraw.")
        else:
            self.__balance -= amount
            print(f"Withdrawal successful. Remaining balance: ${self.__balance:,.2f}")

    def deposit(self, amount):
        if amount <= 0:
            print("Deposit amount must be greater than zero.")
        else:
            self.__balance += amount
            print(f"Deposit successful. Updated balance: ${self.__balance:,.2f}")

# Example usage
credit_card = CreditCard(limit=1000)

# Accessing balance using get_balance()
print(f"Current balance: ${credit_card.get_balance():,.2f}")

# Attempting to directly modify balance (not allowed)
# credit_card.__balance = 500  # This would raise an AttributeError

# Withdraw and deposit operations
credit_card.withdraw(200)
credit_card.deposit(300)

# Accessing balance after transactions
print(f"Updated balance: ${credit_card.get_balance():,.2f}")
