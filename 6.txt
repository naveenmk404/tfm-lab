import numpy as np
import tensorflow as tf
import matplotlib.pyplot as plt

def complex_function(x):
    return np.sin(x) + np.cos(2 * x)

X = np.linspace(0, 2*np.pi, 100).reshape(-1, 1)
y = complex_function(X)

model = tf.keras.Sequential([
    tf.keras.layers.Dense(10, activation='relu', input_shape=(1,)),
    tf.keras.layers.Dense(1)
])

model.compile(optimizer='adam', loss='mse')

model.fit(X, y, epochs=500, verbose=0)

predictions = model.predict(X)

plt.plot(X, y, label='True Function')
plt.plot(X, predictions, label='Neural Network Approximation', linestyle='dashed')
plt.legend()
plt.show()